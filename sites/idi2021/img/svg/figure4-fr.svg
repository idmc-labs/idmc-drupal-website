<svg version="1.1" id="figure4" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 377.9 178.6" style="enable-background:new 0 0 377.9 178.6;" xml:space="preserve" onload="initSVG()">
<style type="text/css">
  @import url('https://use.typekit.net/ret0ejy.css');
  .section, .numbers {transition: opacity 0.3s ease}
	.st0{fill:none;stroke:#DADADA;stroke-width:0.25;stroke-miterlimit:10;}
	.st1{fill:#575756;stroke:#575756;stroke-width:0.5;stroke-miterlimit:10;}
	.st2{fill:#646363;}
	.st3{font-family:'proxima-nova'; font-weight:600}
	.st4{font-size:16px;}
	.st5{fill:#3DB077;}
	.st6{font-family:'proxima-nova';}
	.st7{font-size:11px;}
	.st8{fill:#C3E1CB;}
	.hide {
		opacity:0
	}
  .st10{font-size:9px;}
</style>
<g id="chart">
	<line class="st0" x1="202.6" y1="173.1" x2="202.6" y2="0.6"/>
	<line class="st0" x1="240.8" y1="173.1" x2="240.8" y2="0.6"/>
	<line class="st0" x1="279" y1="173.1" x2="279" y2="0.6"/>
	<line class="st0" x1="317.2" y1="173.1" x2="317.2" y2="0.6"/>
	<line class="st0" x1="355.4" y1="173.1" x2="355.4" y2="0.6"/>
	<line class="st1" x1="377.9" y1="25" x2="0" y2="25"/>
	<line class="st1" x1="-158.5" y1="577.8" x2="305.7" y2="577.8"/>
	<line class="st0" x1="164.4" y1="173.1" x2="164.4" y2="2"/>
</g>
<g id="worldwide" class="section">
<g>
	<text transform="matrix(1 0 0 1 62 18.9394)" class="st2 st3 st4">Monde entier</text>
</g>

<rect x="164.4" y="11.2" class="st5" width="115.4" height="5.8"/>
<rect x="5.6" y="5" width="369.4" height="15.1" class="hide"/>
</g>
<g id="mena" class="section">
	<g>
		<text transform="matrix(1 0 0 1 0 41.3307)" class="st2 st6 st7">Moyen-Orient et Afrique du Nord</text>
	</g>
	<rect x="164.4" y="35.4" class="st8" width="99.9" height="5.8"/>
	<rect x="5.6" y="28.2" width="369.4" height="15.1" class="hide"/>
</g>
<g id="ssa" class="section">
	<g>
		<text transform="matrix(1 0 0 1 48 65.5037)" class="st2 st6 st7">Afrique subsaharienne</text>
	</g>
	<rect x="164.4" y="59.5" class="st8" width="111.9" height="5.8"/>
	<rect x="5.6" y="53.4" width="369.4" height="15.1" class="hide"/>
</g>
<g id="sa" class="section">
	<g>
		<text transform="matrix(1 0 0 1 98 89.6447)" class="st2 st6 st7">Asie du Sud</text>
	</g>
	<rect x="164.4" y="83.7" class="st8" width="117.7" height="5.8"/>
	<rect x="5.6" y="77.9" width="369.4" height="15.1" class="hide"/>
</g>
<g id="eap" class="section">
	<g>
		<text transform="matrix(1 0 0 1 40 112.8651)" class="st2 st6 st7">Asie de l’Est et Pacifique</text>
	</g>
	<rect x="164.4" y="107.9" class="st8" width="123" height="5.8"/>
	<rect x="5.6" y="102.3" width="369.4" height="15.1" class="hide"/>
</g>
<g id="americas" class="section">
	<g>
		<text transform="matrix(1 0 0 1 110 138.0654)" class="st2 st6 st7">Amérique</text>
	</g>
	<rect x="164.4" y="132.1" class="st8" width="123.8" height="5.8"/>
	<rect x="5.6" y="126.1" width="369.4" height="15.1" class="hide" />
</g>
<g id="eca" class="section">
	<g>
		<text transform="matrix(1 0 0 1 44 162.8774)" class="st2 st6 st7">Europe et Asie centrale</text>
	</g>
	<rect x="164.4" y="156.2" class="st8" width="126.6" height="5.8"/>
	<rect x="5.6" y="151.1" width="369.4" height="15.1" class="hide"/>
</g>
<g id="scale">
	<g>
		<text transform="matrix(1 0 0 1 152.6263 176.1974)" class="st2 st6 st10">0,000</text>
	</g>
	<g>
		<text transform="matrix(1 0 0 1 191.0026 176.1974)" class="st2 st6 st10">0,200</text>
	</g>
	<g>
		<text transform="matrix(1 0 0 1 230.5126 176.1974)" class="st2 st6 st10">0,400</text>
	</g>
	<g>
		<text transform="matrix(1 0 0 1 268.0153 176.1974)" class="st2 st6 st10">0,600</text>
	</g>
	<g>
		<text transform="matrix(1 0 0 1 305.9056 176.1974)" class="st2 st6 st10">0,800</text>
	</g>
	<g>
		<text transform="matrix(1 0 0 1 348.0433 176.1974)" class="st2 st6 st10">1,000</text>
	</g>
</g>

  <script type='application/ecmascript'>
  <![CDATA[


  	 if (!Array.from) {
  Array.from = (function () {
    var toStr = Object.prototype.toString;
    var isCallable = function (fn) {
      return typeof fn === 'function' || toStr.call(fn) === '[object Function]';
    };
    var toInteger = function (value) {
      var number = Number(value);
      if (isNaN(number)) { return 0; }
      if (number === 0 || !isFinite(number)) { return number; }
      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));
    };
    var maxSafeInteger = Math.pow(2, 53) - 1;
    var toLength = function (value) {
      var len = toInteger(value);
      return Math.min(Math.max(len, 0), maxSafeInteger);
    };

    // The length property of the from method is 1.
    return function from(arrayLike/*, mapFn, thisArg */) {
      // 1. Let C be the this value.
      var C = this;

      // 2. Let items be ToObject(arrayLike).
      var items = Object(arrayLike);

      // 3. ReturnIfAbrupt(items).
      if (arrayLike == null) {
        throw new TypeError("Array.from requires an array-like object - not null or undefined");
      }

      // 4. If mapfn is undefined, then let mapping be false.
      var mapFn = arguments.length > 1 ? arguments[1] : void undefined;
      var T;
      if (typeof mapFn !== 'undefined') {
        // 5. else
        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.
        if (!isCallable(mapFn)) {
          throw new TypeError('Array.from: when provided, the second argument must be a function');
        }

        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.
        if (arguments.length > 2) {
          T = arguments[2];
        }
      }

      // 10. Let lenValue be Get(items, "length").
      // 11. Let len be ToLength(lenValue).
      var len = toLength(items.length);

      // 13. If IsConstructor(C) is true, then
      // 13. a. Let A be the result of calling the [[Construct]] internal method of C with an argument list containing the single item len.
      // 14. a. Else, Let A be ArrayCreate(len).
      var A = isCallable(C) ? Object(new C(len)) : new Array(len);

      // 16. Let k be 0.
      var k = 0;
      // 17. Repeat, while k < len… (also steps a - h)
      var kValue;
      while (k < len) {
        kValue = items[k];
        if (mapFn) {
          A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);
        } else {
          A[k] = kValue;
        }
        k += 1;
      }
      // 18. Let putStatus be Put(A, "length", len, true).
      A.length = len;
      // 20. Return A.
      return A;
    };
  }());
}


// Production steps of ECMA-262, Edition 5, 15.4.4.18
// Reference: http://es5.github.io/#x15.4.4.18
if (!Array.prototype.forEach) {

  Array.prototype.forEach = function(callback/*, thisArg*/) {

    var T, k;

    if (this == null) {
      throw new TypeError('this is null or not defined');
    }

    // 1. Let O be the result of calling toObject() passing the
    // |this| value as the argument.
    var O = Object(this);

    // 2. Let lenValue be the result of calling the Get() internal
    // method of O with the argument "length".
    // 3. Let len be toUint32(lenValue).
    var len = O.length >>> 0;

    // 4. If isCallable(callback) is false, throw a TypeError exception.
    // See: http://es5.github.com/#x9.11
    if (typeof callback !== 'function') {
      throw new TypeError(callback + ' is not a function');
    }

    // 5. If thisArg was supplied, let T be thisArg; else let
    // T be undefined.
    if (arguments.length > 1) {
      T = arguments[1];
    }

    // 6. Let k be 0.
    k = 0;

    // 7. Repeat while k < len.
    while (k < len) {

      var kValue;

      // a. Let Pk be ToString(k).
      //    This is implicit for LHS operands of the in operator.
      // b. Let kPresent be the result of calling the HasProperty
      //    internal method of O with argument Pk.
      //    This step can be combined with c.
      // c. If kPresent is true, then
      if (k in O) {

        // i. Let kValue be the result of calling the Get internal
        // method of O with argument Pk.
        kValue = O[k];

        // ii. Call the Call internal method of callback with T as
        // the this value and argument list containing kValue, k, and O.
        callback.call(T, kValue, k, O);
      }
      // d. Increase k by 1.
      k++;
    }
    // 8. return undefined.
  };
}

// Overwrites native 'children' prototype.
// Adds Document & DocumentFragment support for IE9 & Safari.
// Returns array instead of HTMLCollection.
;(function(constructor) {
    if (constructor &&
        constructor.prototype &&
        constructor.prototype.children == null) {
        Object.defineProperty(constructor.prototype, 'children', {
            get: function() {
                var i = 0, node, nodes = this.childNodes, children = [];
                while (node = nodes[i++]) {
                    if (node.nodeType === 1) {
                        children.push(node);
                    }
                }
                return children;
            }
        });
    }
})(window.Node || window.Element);


var sections = Array.from(document.getElementsByClassName("section"));



    	 function highlight(s) {
        sections.forEach(function(section) {
            if (section == s) {
                section.style.opacity=1;
            } else {
                section.style.opacity=0.4;
            }
        })
    }
    function reset(s) {
        sections.forEach(function(section) {
            section.style.opacity=1;
        })
    }


function getPos(e){
	x=e.clientX;
	y=e.clientY;
	//console.log("Your Mouse Position Is : " + x + " and " + y );
	return [x,y];
}
  		function initSVG() {

  	sections.forEach(function(g){
 		g.addEventListener("mouseover", function(evt){
       			parent.showregtooltip(this.id, getPos(evt),"regtooltip",this, "fr");

 		highlight(g);
 	});
 	g.addEventListener("mouseout", function(evt){
 		reset(g);
     			parent.hidetooltip("regtooltip");

 	});




 	});




 }





  ]]>
</script>

</svg>

